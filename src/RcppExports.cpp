// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// lse
double lse(const NumericVector& x);
RcppExport SEXP _relabelKL_lse(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(lse(x));
    return rcpp_result_gen;
END_RCPP
}
// relabel_kl_log
Rcpp::List relabel_kl_log(const arma::cube& lphi, bool renormalize, arma::uword maxit, arma::uword nthreads, bool verbose);
RcppExport SEXP _relabelKL_relabel_kl_log(SEXP lphiSEXP, SEXP renormalizeSEXP, SEXP maxitSEXP, SEXP nthreadsSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::cube& >::type lphi(lphiSEXP);
    Rcpp::traits::input_parameter< bool >::type renormalize(renormalizeSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type nthreads(nthreadsSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(relabel_kl_log(lphi, renormalize, maxit, nthreads, verbose));
    return rcpp_result_gen;
END_RCPP
}
// relabel_true_log
Rcpp::List relabel_true_log(const arma::cube& lphi, const arma::mat& lphi_true, bool renormalize, arma::uword nthreads, bool verbose);
RcppExport SEXP _relabelKL_relabel_true_log(SEXP lphiSEXP, SEXP lphi_trueSEXP, SEXP renormalizeSEXP, SEXP nthreadsSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::cube& >::type lphi(lphiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type lphi_true(lphi_trueSEXP);
    Rcpp::traits::input_parameter< bool >::type renormalize(renormalizeSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type nthreads(nthreadsSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(relabel_true_log(lphi, lphi_true, renormalize, nthreads, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_relabelKL_lse", (DL_FUNC) &_relabelKL_lse, 1},
    {"_relabelKL_relabel_kl_log", (DL_FUNC) &_relabelKL_relabel_kl_log, 5},
    {"_relabelKL_relabel_true_log", (DL_FUNC) &_relabelKL_relabel_true_log, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_relabelKL(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
