// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// relabel_kl
Rcpp::List relabel_kl(const arma::cube& phi, arma::uword maxit, bool verbose);
RcppExport SEXP _relabelKL_relabel_kl(SEXP phiSEXP, SEXP maxitSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::cube& >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(relabel_kl(phi, maxit, verbose));
    return rcpp_result_gen;
END_RCPP
}
// relabel_true
Rcpp::List relabel_true(const arma::cube& phi, const arma::mat& phi_true, bool verbose);
RcppExport SEXP _relabelKL_relabel_true(SEXP phiSEXP, SEXP phi_trueSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::cube& >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type phi_true(phi_trueSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(relabel_true(phi, phi_true, verbose));
    return rcpp_result_gen;
END_RCPP
}
// lse
double lse(const NumericVector& x);
RcppExport SEXP _relabelKL_lse(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(lse(x));
    return rcpp_result_gen;
END_RCPP
}
// relabel_kl_log
Rcpp::List relabel_kl_log(const arma::cube& lphi, arma::uword maxit, bool verbose);
RcppExport SEXP _relabelKL_relabel_kl_log(SEXP lphiSEXP, SEXP maxitSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::cube& >::type lphi(lphiSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(relabel_kl_log(lphi, maxit, verbose));
    return rcpp_result_gen;
END_RCPP
}
// kl1
double kl1(arma::mat v1, arma::mat v2);
RcppExport SEXP _relabelKL_kl1(SEXP v1SEXP, SEXP v2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type v1(v1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type v2(v2SEXP);
    rcpp_result_gen = Rcpp::wrap(kl1(v1, v2));
    return rcpp_result_gen;
END_RCPP
}
// kl2
double kl2(arma::mat v1, arma::mat v2);
RcppExport SEXP _relabelKL_kl2(SEXP v1SEXP, SEXP v2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type v1(v1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type v2(v2SEXP);
    rcpp_result_gen = Rcpp::wrap(kl2(v1, v2));
    return rcpp_result_gen;
END_RCPP
}
// lsumcube
arma::mat lsumcube(const arma::cube& res);
RcppExport SEXP _relabelKL_lsumcube(SEXP resSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::cube& >::type res(resSEXP);
    rcpp_result_gen = Rcpp::wrap(lsumcube(res));
    return rcpp_result_gen;
END_RCPP
}
// sumcube
arma::mat sumcube(const arma::cube& res);
RcppExport SEXP _relabelKL_sumcube(SEXP resSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::cube& >::type res(resSEXP);
    rcpp_result_gen = Rcpp::wrap(sumcube(res));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_relabelKL_relabel_kl", (DL_FUNC) &_relabelKL_relabel_kl, 3},
    {"_relabelKL_relabel_true", (DL_FUNC) &_relabelKL_relabel_true, 3},
    {"_relabelKL_lse", (DL_FUNC) &_relabelKL_lse, 1},
    {"_relabelKL_relabel_kl_log", (DL_FUNC) &_relabelKL_relabel_kl_log, 3},
    {"_relabelKL_kl1", (DL_FUNC) &_relabelKL_kl1, 2},
    {"_relabelKL_kl2", (DL_FUNC) &_relabelKL_kl2, 2},
    {"_relabelKL_lsumcube", (DL_FUNC) &_relabelKL_lsumcube, 1},
    {"_relabelKL_sumcube", (DL_FUNC) &_relabelKL_sumcube, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_relabelKL(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
